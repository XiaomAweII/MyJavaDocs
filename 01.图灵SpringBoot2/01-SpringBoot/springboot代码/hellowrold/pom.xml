<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.tulingxueyuan.springboot</groupId>
    <artifactId>helloworld</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!-- 引入了父Maven项目 ，继承父Maven项目所有的配置信息

    spring-boot-starter-parent 又引入一个父Maven项目
    <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-dependencies</artifactId>
    <version>2.3.5.RELEASE</version>
  </parent>
  spring-boot-dependencies  帮我们管理了SpringBoot应用中所有的依赖的版本，
  以后我们导入已有依赖就不需要写版本号了，它帮我们解决第三方库直接的版本冲突问题
  名次：SpringBoot的版本仲裁中心
    -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.5.RELEASE</version>
    </parent>

    <!--
        starter 场景启动器：不同的场景启动器维护了所对应的所有依赖，从而简化maven文件书写
        spring-boot-starter-web：使用Spring MVC构建Web（包括RESTful）应用程序。
            使用Tomcat作为默认的嵌入式容器
    -->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <!--部署springboot的插件， 只有加了这个插件 当运行 java -jar xxxx.jar 才能正常启动-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>